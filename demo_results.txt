
================================================================================
========================== 🤖 플샵(PPLShop) 에이전트 시스템 데모 ===========================
================================================================================

📌 에이전트 팩토리 초기화 중...
📌 에이전트 생성 중...
📌 생성된 에이전트: pm, designer, frontend, backend, ai_engineer

📌 등록된 에이전트 상태:
  - designer: ✅ 연결됨
  - frontend: ✅ 연결됨
  - backend: ✅ 연결됨
  - ai_engineer: ✅ 연결됨

📌 MCP 연결 상태:
  - unity_mcp: ✅ 사용 가능
  - github_mcp: ❌ 사용 불가
  - figma_mcp: ❌ 사용 불가
  - db_mcp: ❌ 사용 불가

================================================================================
============================ PM 에이전트 시스템 프롬프트 (예시) =============================
================================================================================


당신은 플샵(PPLShop) 프로젝트의 PM(Project Manager) 에이전트입니다.
당신의 역할은 프로젝트 계획을 수립하고, 다른 에이전트들(디자이너, 프론트엔드, 백엔드, AI 엔지니어)에게
작업을 할당하고, 프로젝트 진행 상황을 모니터링하는 것입니다.

주요 책임:
1. 프로젝트 요구사항 분석 및 계획 수립
2. 작업 분배 및 우선순위 설정
3. 에이전트 간 조율 및 협업 촉진
4. 프로젝트 진행 상황 추적
5. 위험 관리 및 문제 해결

당신은 Cursor Rules를 철저히 준수해야 하며, 프로젝트 구조, 파일명 규칙, 디자인 시스템 등을 고려해야 합니다.

================================================================================
=========================== 디자이너 에이전트 시스템 프롬프트 (예시) ============================
================================================================================


당신은 플샵(PPLShop) 프로젝트의 디자이너 에이전트입니다.
당신의 역할은 UI/UX 디자인, 와이어프레임 제작, 디자인 시스템 구축을 담당하는 것입니다.

주요 책임:
1. 사용자 인터페이스(UI) 디자인
2. 사용자 경험(UX) 최적화
3. 와이어프레임 및 프로토타입 제작
4. 디자인 시스템 구축 및 관리
5. 디자인 가이드라인 제공

당신은 Cursor Rules를 준수해야 하며, 특히 디자인 시스템(colors.js, typography.js, spacing.js)을
일관되게 적용해야 합니다.

================================================================================
=========================== 프론트엔드 에이전트 시스템 프롬프트 (예시) ===========================
================================================================================


당신은 플샵(PPLShop) 프로젝트의 프론트엔드 에이전트입니다.
당신의 역할은 React/React Native 컴포넌트를 개발하고, 사용자 인터페이스를 구현하는 것입니다.

주요 책임:
1. React/React Native 컴포넌트 개발
2. 반응형 레이아웃 구현
3. API 연동
4. 상태 관리
5. 프론트엔드 테스트

당신은 Cursor Rules를 준수해야 하며, 특히 디자인 시스템을 활용하고 파일명 규칙(예: MainScreen.js,
UserCardComponent.js)을 따라야 합니다.

================================================================================
============================ 백엔드 에이전트 시스템 프롬프트 (예시) ============================
================================================================================


당신은 플샵(PPLShop) 프로젝트의 백엔드 에이전트입니다.
당신의 역할은 API 엔드포인트를 개발하고, 데이터베이스를 관리하며, 서버 로직을 구현하는 것입니다.

주요 책임:
1. RESTful API 개발
2. 데이터베이스 설계 및 구현
3. 인증 및 권한 관리
4. 비즈니스 로직 구현
5. 백엔드 테스트

당신은 Cursor Rules를 준수해야 하며, 특히 services 폴더 구조와 명확한 함수/파일명을 사용해야 합니다.

================================================================================
============================= 간단한 프로젝트 계획 예시 (목업) ==============================
================================================================================

📋 프로젝트명: 플샵(PPLShop) - 온라인 쇼핑몰
📋 설명: 사용자 인증, 상품 목록, 장바구니, 결제 기능을 갖춘 온라인 쇼핑몰
📋 예상 기간: 4주

📋 단계:
  - ✅ 기획 및 디자인 (1주): 완료
  - 🔄 프론트엔드 개발 (2주): 진행 중
  - 🔄 백엔드 개발 (2주): 진행 중
  - ⏳ 테스트 및 배포 (1주): 예정

📋 에이전트 역할:
  - pm: 프로젝트 전체 조율 및 관리
  - designer: UI/UX 디자인 및 와이어프레임 생성
  - frontend: React 컴포넌트 개발 및 API 연동
  - backend: RESTful API 구현 및 데이터베이스 관리
  - ai_engineer: 상품 추천 시스템 개발

================================================================================
======================== 플샵(PPLShop) 폴더 구조 및 파일명 규칙 예시 =========================
================================================================================


📁 프로젝트 구조

pplshop/
├── 📁 app/
│   ├── 📁 screens/         # 화면 (HomeScreen.js, LoginScreen.js 등)
│   ├── 📁 components/      # 재사용 위젯 (UserCard.js, CommonButton.js)
│   ├── 📁 services/        # API, 상태 관리 모듈
│   ├── 📁 config/          # 환경설정 (env 등)
│   ├── 📄 App.js           # 앱 진입점
│   └── 📄 index.js         # 런처(선택)
├── 📁 assets/
│   ├── 📁 images/
│   ├── 📁 svg/
│   └── 📁 fonts/
├── 📁 agents/              # 에이전트 관련 코드
│   ├── 📄 pm_agent_ollama.py         # PM 에이전트
│   ├── 📄 designer_agent_ollama.py   # 디자이너 에이전트
│   ├── 📄 frontend_agent_ollama.py   # 프론트엔드 에이전트
│   ├── 📄 backend_agent_ollama.py    # 백엔드 에이전트
│   ├── 📄 ai_engineer_agent_ollama.py # AI 엔지니어 에이전트
│   ├── 📄 agent_factory.py           # 에이전트 팩토리
│   └── 📄 mcp_agent_helper.py        # MCP 연결 헬퍼
└── 📄 package.json

================================================================================
========================== Cursor Rule 기반 디자인 시스템 예시 ===========================
================================================================================


// colors.js - 컬러 팔레트
export const Colors = {
  primary: '#3A86FF',
  secondary: '#8338EC',
  background: '#F8F9FA',
  textPrimary: '#212529',
  success: '#28a745',
  warning: '#ffc107',
  danger: '#dc3545',
};

// typography.js - 타이포그래피 시스템
export const Typography = {
  heading1: {
    fontSize: 24,
    fontWeight: 'bold',
    color: Colors.textPrimary,
  },
  body1: {
    fontSize: 16,
    color: Colors.textPrimary,
  },
  button: {
    fontSize: 14,
    fontWeight: '600',
  },
};

// spacing.js - 간격 시스템
export const Spacing = {
  xs: 4,
  sm: 8,
  md: 16,
  lg: 24,
  xl: 32,
};

================================================================================
========================= 🎉 플샵(PPLShop) 에이전트 시스템 데모 완료 =========================
================================================================================

데모가 성공적으로 완료되었습니다.
실제 시스템 구현 시에는 Ollama API를 통한 실제 에이전트 호출이 이루어집니다.
MCP 연결을 통해 외부 도구(Unity, GitHub, Figma 등)와 통합이 가능합니다.
